function interactiveSort() {
  while (true) {
    const input = prompt(
      '–í–≤–µ–¥—ñ—Ç—å 10 —Å–ª—ñ–≤ —Ç–∞ —á–∏—Å–µ–ª, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –ø—Ä–æ–±–ª—ñ–∞–º–∏ –∞–±–æ exit –¥–ª—è –≤–∏—Ö–æ–¥—É —ñ–∑ –ø—Ä–æ–≥—Ä–∞–º–∏ ü§ó'
    );

    if (input.trim().toLowerCase() === 'exit') {
      console.log('–ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ üëê');
      break;
    }

    const items = input.trim().split(' ');

    const operation = prompt(`–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ—é:
        1. –í—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ —Å–ª–æ–≤–∞ –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º.
        2. –ü–æ–∫–∞–∑–∞—Ç–∏ —á–∏—Å–ª–∞ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º.
        3. –ü–æ–∫–∞–∑–∞—Ç–∏ —á–∏—Å–ª–∞ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º.
        4. –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ª–æ–≤–∞ –≤ –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±—É–∫–≤.
        5. –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Å–ª–æ–≤–∞.
        6. –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
        –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü—ñ—ó üëá`);

    
    switch (operation){
        case "1":
            console.log(items.filter(item => isNaN(item)).sort());
            break;
        case "2":
            console.log(items.filter(item => !isNaN(item)).sort((a, b) => a - b));
            break;
        case "3":
            console.log(items.filter(item => !isNaN(item)).sort((a, b) => b - a));
            break;
        case "4":
            console.log(items.filter(item => isNaN(item)).sort((a, b) => a.length - b.length));
            break;
        case "5":
            console.log([...new Set(items.filter(item => isNaN(item)))]);
            break;
        case "6":
            console.log([...new Set(items)]);
            break;
        default:
            console.log("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –æ–ø–µ—Ä–∞—Ü—ñ—ó ü•∂");
        
    }
  }
}

interactiveSort();

